---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:

      server:
        replicas: 2
        annotations:
          secret.reloader.stakater.com/reload: "{{ .Release.Name }}-secret"
          configmap.reloader.stakater.com/reload: "{{ .Release.Name }}-configmap"
        pod:
          affinity:
            nodeAffinity: &nodeAffinity
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                    - key: gpu.homelab/amd
                      operator: In
                      values:
                        - "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.139.2@sha256:ccfca8a87a65914ab23164efa1f6392940629a2a54ed71bce87049713d926426
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
              - configMapRef:
                  name: "{{ .Release.Name }}-configmap"

      machine-learning:
        type: statefulset
        replicas: 2
        annotations:
          secret.reloader.stakater.com/reload: "{{ .Release.Name }}-secret"
          configmap.reloader.stakater.com/reload: "{{ .Release.Name }}-configmap"
        pod:
          affinity:
            nodeAffinity: *nodeAffinity
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/controller
                          operator: In
                          values:
                            - machine-learning
                    topologyKey: kubernetes.io/hostname
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.138.1@sha256:f34e855424fd91c5990132e5b2bde91e1d178ec5205de293ebd8779839a4a77c
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
              - configMapRef:
                  name: "{{ .Release.Name }}-configmap"
            env:
              MPLCONFIGDIR: "/cache/matplotlib"
        statefulset:
          volumeClaimTemplates:
            - name: cache
              storageClass: openebs-hostpath
              size: 10Gi
              accessMode: ReadWriteOnce
              globalMounts:
                - path: /cache
                  subPath: cache
                - path: /.cache
                  subPath: dotCache

      redis:
        containers:
          app:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 8.2.1@sha256:cc2dfb8f5151da2684b4a09bd04b567f92d07591d91980eb3eca21df07e12760
            env:
              REDIS_REPLICATION_MODE: master
            command:
              - redis-server

    service:
      server:
        controller: server
        ports:
          http:
            port: &port 2283
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      redis:
        controller: redis
        ports:
          http:
            port: 6379

    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch

    route:
      internal:
        hostnames:
          - "photos.${DOMAIN_5}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: domain-5-subdomain-https
          - name: internal
            namespace: kube-system
            sectionName: domain-5-subdomain-https
        rules:
          - backendRefs:
              - identifier: server
                port: *port

    persistence:
      matplotlib:
        type: emptyDir
        advancedMounts:
          server:
            app:
              - path: /config/matplotlib
      library:
        type: nfs
        server: nas.batcave
        path: /mnt/zpool/immich
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload
      rdb-data:
        type: emptyDir
        advancedMounts:
          redis:
            app:
              - path: /data
      tmpfs:
        type: emptyDir
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/.reverse-geocoding-dump
                subPath: geocoding
              - path: /usr/src/app/.transformers_cache
                subPath: transformers
